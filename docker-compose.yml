networks:
  dev:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - postgres
      - backend
      - frontend
    networks:
      - dev
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=User Id=${DB_USER};Password=${DB_PASSWORD};Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};
      - JwtOptions__SecretKey=${JWT_SECRET_KEY}
      - JwtOptions__ExpiresHours=${JWT_EXPIRES_HOURS}
    depends_on:
      - postgres
    networks:
      - dev
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost
    depends_on:
      - postgres
      - backend
    networks:
      - dev
  postgres:
    container_name: postgres-db
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dev
volumes:
  postgres-data:
